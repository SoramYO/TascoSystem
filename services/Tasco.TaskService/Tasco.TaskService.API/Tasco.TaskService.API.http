@Tasco.TaskService.API_HostAddress = http://localhost:7260

### ========================================
### WORK TASK SERVICE API TESTS
### ========================================

### 1. CREATE WORK TASK - Sample 1 (High Priority, Todo Status)
POST {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks
Content-Type: application/json

{
  "workAreaId": "550e8400-e29b-41d4-a716-446655440000",
  "title": "Implement User Authentication System",
  "description": "Develop a secure authentication system with JWT tokens, user registration, login, and password reset functionality. Include role-based access control and audit logging.",
  "priority": "High",
  "status": "Todo",
  "startDate": "2024-01-15T09:00:00Z",
  "endDate": "2024-02-15T17:00:00Z",
  "dueDate": "2024-02-10T17:00:00Z",
  "displayOrder": 1
}

### 2. CREATE WORK TASK - Sample 2 (Medium Priority, InProgress Status)
POST {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks
Content-Type: application/json

{
  "workAreaId": "550e8400-e29b-41d4-a716-446655440001",
  "title": "Database Schema Design",
  "description": "Design and implement the database schema for the new project management system. Include tables for users, projects, tasks, comments, and notifications.",
  "priority": "Medium",
  "status": "InProgress",
  "startDate": "2024-01-10T08:00:00Z",
  "endDate": "2024-01-25T17:00:00Z",
  "dueDate": "2024-01-20T17:00:00Z",
  "displayOrder": 2
}

### 3. CREATE WORK TASK - Sample 3 (Low Priority, Review Status)
POST {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks
Content-Type: application/json

{
  "workAreaId": "550e8400-e29b-41d4-a716-446655440002",
  "title": "API Documentation Update",
  "description": "Update the API documentation to include new endpoints and improve existing examples. Add Swagger annotations and create comprehensive user guides.",
  "priority": "Low",
  "status": "Review",
  "startDate": "2024-01-20T10:00:00Z",
  "endDate": "2024-01-30T16:00:00Z",
  "dueDate": "2024-01-28T17:00:00Z",
  "displayOrder": 3
}

### 4. CREATE WORK TASK - Sample 4 (Urgent Priority, Done Status)
POST {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks
Content-Type: application/json

{
  "workAreaId": "550e8400-e29b-41d4-a716-446655440003",
  "title": "Security Vulnerability Fix",
  "description": "Fix critical security vulnerability in user input validation. Implement proper sanitization and validation for all user inputs across the application.",
  "priority": "Urgent",
  "status": "Done",
  "startDate": "2024-01-05T08:00:00Z",
  "endDate": "2024-01-08T17:00:00Z",
  "dueDate": "2024-01-07T17:00:00Z",
  "completedDate": "2024-01-08T16:30:00Z",
  "displayOrder": 4
}

### 5. CREATE WORK TASK - Sample 5 (Medium Priority, Todo Status)
POST {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks
Content-Type: application/json

{
  "workAreaId": "550e8400-e29b-41d4-a716-446655440004",
  "title": "Frontend UI Components",
  "description": "Create reusable React components for the dashboard including charts, tables, forms, and navigation elements. Ensure responsive design and accessibility compliance.",
  "priority": "Medium",
  "status": "Todo",
  "startDate": "2024-02-01T09:00:00Z",
  "endDate": "2024-02-28T17:00:00Z",
  "dueDate": "2024-02-25T17:00:00Z",
  "displayOrder": 5
}

### ========================================
### GET OPERATIONS
### ========================================

### 6. GET ALL WORK TASKS (Default pagination)
GET {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks
Accept: application/json

### 7. GET ALL WORK TASKS (Custom pagination)
GET {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks?pageSize=5&pageIndex=1
Accept: application/json

### 8. GET ALL WORK TASKS (With search)
GET {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks?search=authentication
Accept: application/json

### 9. GET WORK TASK BY ID (Replace {id} with actual task ID from create response)
GET {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks/{id}
Accept: application/json

### 10. GET MY WORK TASKS (Default pagination)
GET {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks/me
Accept: application/json

### 11. GET MY WORK TASKS (Custom pagination)
GET {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks/me?pageSize=3&pageIndex=1
Accept: application/json

### ========================================
### UPDATE OPERATIONS
### ========================================

### 12. UPDATE WORK TASK (Replace {id} with actual task ID)
PUT {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks/{id}
Content-Type: application/json

{
  "workAreaId": "550e8400-e29b-41d4-a716-446655440000",
  "title": "Implement User Authentication System - Updated",
  "description": "Develop a secure authentication system with JWT tokens, user registration, login, and password reset functionality. Include role-based access control, audit logging, and multi-factor authentication.",
  "priority": "Urgent",
  "status": "InProgress",
  "startDate": "2024-01-15T09:00:00Z",
  "endDate": "2024-02-20T17:00:00Z",
  "dueDate": "2024-02-15T17:00:00Z",
  "displayOrder": 1
}

### 13. UPDATE WORK TASK STATUS TO DONE
PUT {{Tasco.TaskService.API_HostAddress}}/api/v1/worktasks/{id}
Content-Type: application/json

{
  "workAreaId": "550e8400-e29b-41d4-a716-446655440001",
  "title": "Database Schema Design",
  "description": "Design and implement the database schema for the new project management system. Include tables for users, projects, tasks, comments, and notifications.",
  "priority": "Medium",
  "status": "Done",
  "startDate": "2024-01-10T08:00:00Z",
  "endDate": "2024-01-25T17:00:00Z",
  "dueDate": "2024-01-20T17:00:00Z",
  "completedDate": "2024-01-22T16:45:00Z",
  "displayOrder": 2
}

### ========================================
### GRPC SERVICE TESTS (if using gRPC)
### ========================================

### Note: For gRPC testing, you'll need a gRPC client like BloomRPC, gRPCui, or Postman
### The following are example gRPC calls (not HTTP):

### CreateWorkTask gRPC call:
### {
###   "title": "gRPC Test Task",
###   "description": "Testing gRPC service",
###   "work_area_id": "550e8400-e29b-41d4-a716-446655440000",
###   "status": "Todo",
###   "priority": "Medium",
###   "start_date": "2024-01-15T09:00:00Z",
###   "end_date": "2024-02-15T17:00:00Z",
###   "due_date": "2024-02-10T17:00:00Z",
###   "progress": 0
### }

### GetWorkTaskById gRPC call:
### {
###   "id": "task-id-here"
### }

### ========================================
### TEST DATA NOTES
### ========================================

### Work Area IDs used in samples:
### - 550e8400-e29b-41d4-a716-446655440000 (Development)
### - 550e8400-e29b-41d4-a716-446655440001 (Database)
### - 550e8400-e29b-41d4-a716-446655440002 (Documentation)
### - 550e8400-e29b-41d4-a716-446655440003 (Security)
### - 550e8400-e29b-41d4-a716-446655440004 (Frontend)

### Priority Levels: Low, Medium, High, Urgent
### Status Values: Todo, InProgress, Review, Done

### To test the APIs:
### 1. First run the CREATE requests to generate sample data
### 2. Copy the returned task IDs from the create responses
### 3. Use those IDs in the GET and UPDATE requests
### 4. Test pagination and search functionality
